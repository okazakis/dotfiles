
((digest . "c9c7b65af857f928caa95be598eb15f0") (undo-list nil (357 . 359) nil (#("4" 0 1 (fontified t)) . -357) nil (#("5" 0 1 (fontified t)) . -358) nil (298 . 300) (#("    " 0 2 (fontified t) 2 4 (fontified t)) . -298) 334 ((marker . 298) . -2) nil (nil rear-nonsticky nil 371 . 372) (nil fontified nil 300 . 372) (300 . 372) nil (297 . 300) nil (#(" " 0 1 (fontified t)) . -491) nil (#(" " 0 1 (fontified t)) . -492) nil (#(" " 0 1 (fontified t)) . -473) nil (#(" " 0 1 (fontified t)) . -474) nil (#(" " 0 1 (fontified t)) . -426) nil (#(" " 0 1 (fontified t)) . -427) nil (#(" " 0 1 (fontified t)) . -450) nil (#(" " 0 1 (fontified t)) . -451) nil (426 . 428) nil (#(" " 0 1 (fontified t)) . -426) nil (#(" " 0 1 (fontified t)) . -427) (t 21923 9787 0 0) nil (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -358) (t 21923 9743 0 0) nil (358 . 359) (#("#" 0 1 (fontified nil)) . -358) (358 . 359) nil (#(" " 0 1 (fontified t)) . -171) ((marker . 171) . -1) nil (#(" " 0 1 (fontified t)) . -172) (t 21923 9045 0 0) ((marker . 171) . -1) nil (493 . 498) nil (#("." 0 1 (fontified t)) . -493) ((marker* . 563) . 1) ((marker . 558) . -1) nil (#("c" 0 1 (fontified t)) . -494) ((marker . 558) . -1) nil (#("u" 0 1 (fontified t)) . -495) ((marker . 558) . -1) nil (#("t" 0 1 (fontified t)) . -496) ((marker . 558) . -1) nil (#("e" 0 1 (fontified t)) . -493) ((marker . 558) . -1) nil (#("k" 0 1 (fontified t)) . -494) nil (#("t" 0 1 (fontified t)) . -495) nil (#("o" 0 1 (fontified t)) . -496) nil (#("t" 0 1 (fontified t)) . -497) (t 21923 9025 0 0) nil (#("," 0 1 (fontified t)) . -426) nil (#("w" 0 1 (fontified t)) . -427) nil (#("a" 0 1 (fontified t)) . -428) nil (#("i" 0 1 (fontified t)) . -429) nil (#("t" 0 1 (fontified t)) . -430) (t 21923 9007 0 0) nil (#("," 0 1 (fontified t)) . -250) nil (#("w" 0 1 (fontified t)) . -251) nil (#("a" 0 1 (fontified t)) . -252) nil (#("i" 0 1 (fontified t)) . -253) nil (#("t" 0 1 (fontified t)) . -254) nil (#("=" 0 1 (fontified t)) . -255) nil (#("f" 0 1 (fontified t)) . -256) nil (#("a" 0 1 (fontified t)) . -257) nil (#("l" 0 1 (fontified t)) . -258) nil (#("s" 0 1 (fontified t)) . -259) nil (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -260) (t 21923 8976 0 0) nil (#("
" 0 1 (fontified t face font-lock-comment-face)) . -293) ((marker . 298) . -1) ((marker . 280) . -1) nil (#("  DCL.swpset(\"lwait\",wait)     # 次の描画の前にマウスクリックを待つ" 0 2 (fontified t) 2 5 (fontified t face font-lock-type-face) 5 13 (fontified t) 13 20 (fontified t face font-lock-string-face) 20 31 (fontified t) 31 33 (fontified t face font-lock-comment-delimiter-face) 33 50 (fontified t face font-lock-comment-face)) . -294) ((marker . 280) . -14) nil (#("Z" 0 1 (fontified t face font-lock-string-face)) . -308) nil (308 . 309) (t 21923 8949 0 0) nil (#("
" 0 1 (fontified t)) . -584) nil (#("e" 0 1 (fontified t)) . -585) nil (#("n" 0 1 (fontified t)) . -586) nil (#("d" 0 1 (fontified t face font-lock-keyword-face)) . -587) nil (#("(\"t\"=>time),true,\"max\"=>100
  else
      GGraph.line enssp.cut(\"t\"=>time),true,\"max\"=>100,\"min\"=>10**(-3)
  end" 0 1 (fontified t) 1 4 (fontified t face font-lock-string-face) 4 12 (fontified t) 12 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t) 17 22 (fontified t face font-lock-string-face) 22 28 (fontified t) 28 30 (fontified t) 30 34 (fontified t face font-lock-keyword-face) 34 35 (fontified t) 35 41 (fontified t) 41 47 (fontified t face font-lock-type-face) 47 63 (fontified t) 63 66 (fontified t face font-lock-string-face) 66 74 (fontified t) 74 78 (fontified t face font-lock-variable-name-face) 78 79 (fontified t) 79 84 (fontified t face font-lock-string-face) 84 90 (fontified t) 90 95 (fontified t face font-lock-string-face) 95 106 (fontified t) 106 108 (fontified t) 108 111 (fontified t face font-lock-keyword-face)) . -569) nil (561 . 565) nil (#("ｋ" 0 1 (fontified t)) . -561) nil (#("ｔ" 0 1 (fontified t)) . -562) nil (#("ｋ" 0 1 (fontified t)) . -563) nil (#("と" 0 1 (fontified t)) . -564) nil (#("ｔ" 0 1 (fontified t)) . -565) nil (563 . 566) nil (561 . 563) (#("ｋ" 0 1 (fontified t)) . -561) (561 . 562) (#("n" 0 1 (fontified t)) . -561) nil (#("s" 0 1 (fontified t)) . -562) nil (#("s" 0 1 (fontified t)) . -563) nil (#("p" 0 1 (fontified t)) . -564) nil (#(" " 0 1 (fontified t)) . 546) nil (#(" " 0 1 (fontified t)) . 546) nil (#(" " 0 1 (fontified t)) . 546) nil (#(" " 0 1 (fontified t)) . 546) nil (#("  if time == 0
" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 15 (fontified t)) . -546) nil (505 . 510) nil (#("エネルギー" 0 5 (fontified t face font-lock-comment-face)) . 505) (505 . 510) (#("えねるぎー" 0 5 (fontified t face font-lock-comment-face)) . -505) (505 . 510) (#("えねるぎ" 0 4 (fontified t face font-lock-comment-face)) . -505) (505 . 509) (#("えねるｇ" 0 4 (fontified t face font-lock-comment-face)) . -505) (505 . 509) (#("えねる" 0 3 (fontified t face font-lock-comment-face)) . -505) (505 . 508) (#("えねｒ" 0 3 (fontified t face font-lock-comment-face)) . -505) (505 . 508) (#("えね" 0 2 (fontified t face font-lock-comment-face)) . -505) (505 . 507) (#("えｎ" 0 2 (fontified t face font-lock-comment-face)) . -505) (505 . 507) (#("え" 0 1 (fontified t face font-lock-comment-face)) . -505) (505 . 506) (#("エ" 0 1 (fontified t face font-lock-comment-face)) . -505) nil (#("ン" 0 1 (fontified t face font-lock-comment-face)) . -506) nil (#("ス" 0 1 (fontified t face font-lock-comment-face)) . -507) nil (#("ト" 0 1 (fontified t face font-lock-comment-face)) . -508) nil (#("ロ" 0 1 (fontified t face font-lock-comment-face)) . -509) nil (#("フ" 0 1 (fontified t face font-lock-comment-face)) . -510) nil (#("ィ" 0 1 (fontified t face font-lock-comment-face)) . -511) nil (#("ー" 0 1 (fontified t face font-lock-comment-face)) . -512) nil (#("ス" 0 1 (fontified t face font-lock-comment-face)) . -513) nil (#("ペ" 0 1 (fontified t face font-lock-comment-face)) . -514) nil (#("ク" 0 1 (fontified t face font-lock-comment-face)) . -515) nil (#("ト" 0 1 (fontified t face font-lock-comment-face)) . -516) nil (#("ル" 0 1 (fontified t face font-lock-comment-face)) . -517) nil (#("
eksp  = GPhys::IO.open 'run3-1.nc', '1deksp'
enssp = GPhys::IO.open 'run3-1.nc', '1denssp'" 0 1 (fontified t) 1 9 (fontified t) 9 14 (fontified t face font-lock-type-face) 14 16 (fontified t) 16 18 (fontified t face font-lock-type-face) 18 24 (fontified t) 24 35 (fontified t face font-lock-string-face) 35 37 (fontified t) 37 45 (fontified t face font-lock-string-face) 45 46 (fontified t) 46 54 (fontified t) 54 59 (fontified t face font-lock-type-face) 59 61 (fontified t) 61 63 (fontified t face font-lock-type-face) 63 69 (fontified t) 69 80 (fontified t face font-lock-string-face) 80 82 (fontified t) 82 91 (fontified t face font-lock-string-face)) . -210) nil (204 . 209) nil (#("v" 0 1 (fontified t face font-lock-string-face)) . -204) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -205) nil (#("r" 0 1 (fontified t face font-lock-string-face)) . -206) nil (165 . 170) nil (#("v" 0 1 (fontified t)) . -165) nil (#("o" 0 1 (fontified t)) . -166) nil (#("r" 0 1 (fontified t)) . -167) nil (#("
" 0 1 (fontified t face font-lock-comment-face)) . -143) ((marker . 298) . -1) ((marker . 143) . -1) ((marker . 143) . -1) nil (#("tsleep = [ ( ARGV[1] || 0.5 ).to_f, 0.0 ].max  # 第2引数は描画間隔(秒)" 0 13 (fontified t) 13 17 (fontified t face font-lock-type-face) 17 47 (fontified t) 47 49 (fontified t face font-lock-comment-delimiter-face) 49 61 (fontified t face font-lock-comment-face)) . -144) ((marker . 143) . -61) ((marker . 143) . -61) ((marker*) . 1) ((marker) . -61) ((marker*) . 3) ((marker) . -61) nil (#("
" 0 1 (fontified t face font-lock-comment-face)) . -205) ((marker . 298) . -1) ((marker . 143) . -1) nil (#("wait = ( tsleep <= 0.0 )       #->true/false; 0以下(true)ならマウスクリックを待つ" 0 31 (fontified t) 31 32 (fontified t face font-lock-comment-delimiter-face) 32 67 (fontified t face font-lock-comment-face)) . -206) ((marker . 143) . -67) nil (#("
" 0 1 (fontified t face font-lock-comment-face)) . -273) ((marker . 298) . -1) nil (#("fsec = ( ARGV[2] ||   0 ).to_i  # 第3引数は最初の時刻
lsec = ( ARGV[3] || 40 ).to_i  # 第4引数は最後の時刻" 0 9 (fontified t) 9 13 (fontified t face font-lock-type-face) 13 32 (fontified t) 32 34 (fontified t face font-lock-comment-delimiter-face) 34 45 (fontified t face font-lock-comment-face) 45 54 (fontified t) 54 58 (fontified t face font-lock-type-face) 58 76 (fontified t) 76 78 (fontified t face font-lock-comment-delimiter-face) 78 88 (fontified t face font-lock-comment-face)) . -274) nil (#("
" 0 1 (fontified t)) . -800) ((marker . 298) . -1) ((marker . 498) . -1) nil (#("for time in fsec..lsec" 0 3 (fontified t face font-lock-keyword-face) 3 9 (fontified t) 9 11 (fontified t face font-lock-keyword-face) 11 22 (fontified t)) . -801) ((marker . 498) . -22) nil (#("
" 0 1 (fontified t)) . -823) ((marker . 298) . -1) nil (#(" " 0 1 (fontified t)) . -824) ((marker . 298) . -1) nil (#(" " 0 1 (fontified t)) . -825) ((marker . 298) . -1) nil (#("
" 0 1 (fontified t)) . -826) ((marker . 298) . -1) nil (#("  # ----- 渦度の物理空間の絵 -----
  GGraph.set_fig(\"itr\"=>1)
  GGraph.set_tone(\"min\"=>-160,\"max\"=>160,\"levels\"=>[-160,-120,-80,-40,-30,-20,-10,0,10,20,30,40,80,120,160])
  GGraph.tone vor.cut(\"t\"=>time)
  GGraph.color_bar
  # ----- エネルギースペクトルの図 -----
#  if time == 0
#      GGraph.line eksp.cut(\"t\"=>time),true,\"max\"=>0.25
#  else
#      GGraph.line eksp.cut(\"t\"=>time),true,\"max\"=>0.25,\"min\"=>3.0*10**(-3)
#  end
#  sleep tsleep" 0 2 (fontified t) 2 4 (fontified t face font-lock-comment-delimiter-face) 4 26 (fontified t face font-lock-comment-face) 26 28 (fontified t) 28 34 (fontified t face font-lock-type-face) 34 43 (fontified t) 43 48 (fontified t face font-lock-string-face) 48 55 (fontified t) 55 61 (fontified t face font-lock-type-face) 61 71 (fontified t) 71 76 (fontified t face font-lock-string-face) 76 83 (fontified t) 83 88 (fontified t face font-lock-string-face) 88 94 (fontified t) 94 102 (fontified t face font-lock-string-face) 102 164 (fontified t) 164 170 (fontified t face font-lock-type-face) 170 184 (fontified t) 184 187 (fontified t face font-lock-string-face) 187 197 (fontified t) 197 203 (fontified t face font-lock-type-face) 203 216 (fontified t) 216 218 (fontified t face font-lock-comment-delimiter-face) 218 243 (fontified t face font-lock-comment-face) 243 246 (fontified t face font-lock-comment-delimiter-face) 246 259 (fontified t face font-lock-comment-face) 259 266 (fontified t face font-lock-comment-delimiter-face) 266 315 (fontified t face font-lock-comment-face) 315 318 (fontified t face font-lock-comment-delimiter-face) 318 323 (fontified t face font-lock-comment-face) 323 330 (fontified t face font-lock-comment-delimiter-face) 330 399 (fontified t face font-lock-comment-face) 399 402 (fontified t face font-lock-comment-delimiter-face) 402 406 (fontified t face font-lock-comment-face) 406 409 (fontified t face font-lock-comment-delimiter-face) 409 421 (fontified t face font-lock-comment-face)) . -827) nil (#("
" 0 1 (fontified t)) . 600) nil (#("  DCL.sgscmn(4)               # カラーマップ番号" 0 2 (fontified t) 2 5 (fontified t face font-lock-type-face) 5 30 (fontified t) 30 32 (fontified t face font-lock-comment-delimiter-face) 32 40 (fontified t face font-lock-comment-face)) . 600) nil (#("
" 0 1 (fontified t)) . 641) nil (#("  DCL.swpset(\"iheight\",450)    # 画面の高さ" 0 2 (fontified t) 2 5 (fontified t face font-lock-type-face) 5 13 (fontified t) 13 22 (fontified t face font-lock-string-face) 22 31 (fontified t) 31 33 (fontified t face font-lock-comment-delimiter-face) 33 38 (fontified t face font-lock-comment-face)) . 641) nil (#("
" 0 1 (fontified t)) . 641) nil (#("  DCL.swpset(\"iwidth\",900)     # 画面の幅" 0 2 (fontified t) 2 5 (fontified t face font-lock-type-face) 5 13 (fontified t) 13 21 (fontified t face font-lock-string-face) 21 31 (fontified t) 31 33 (fontified t face font-lock-comment-delimiter-face) 33 37 (fontified t face font-lock-comment-face)) . 641) nil (#("
" 0 1 (fontified t)) . 769) nil (#("  DCL.swpset(\"lalt\",true)      # 裏で描画（パラパラアニメ用）" 0 2 (fontified t) 2 5 (fontified t face font-lock-type-face) 5 13 (fontified t) 13 19 (fontified t face font-lock-string-face) 19 20 (fontified t) 20 24 (fontified t face font-lock-variable-name-face) 24 31 (fontified t) 31 33 (fontified t face font-lock-comment-delimiter-face) 33 47 (fontified t face font-lock-comment-face)) . 769) nil (#("
" 0 1 (fontified t)) . 834) nil (#("  DCL.sldiv(\"y\",2,1)           # 画面分割 (描画順(\"y\"oko/\"t\"ate),数:横,数:縦)" 0 2 (fontified t) 2 5 (fontified t face font-lock-type-face) 5 12 (fontified t) 12 15 (fontified t face font-lock-string-face) 15 31 (fontified t) 31 33 (fontified t face font-lock-comment-delimiter-face) 33 66 (fontified t face font-lock-comment-face)) . 834) (t 21923 7295 0 0)))
