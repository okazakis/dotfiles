
((digest . "67dfd4d1c7a7d2badd76edce0bf9ddc6") (undo-list nil (119 . 120) nil (#(")" 0 1 (fontified t)) . -112) ((marker* . 119) . 1) ((marker . 120) . -1) ((marker . 120) . -1) nil (111 . 113) nil (#(" " 0 1 (fontified t)) . -111) ((marker . 120) . -1) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . -112) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . -120) (t 21923 5864 0 0) ((marker . 120) . -1) nil (120 . 121) (#(" " 0 1 (fontified nil face font-lock-string-face)) . -120) (120 . 121) (#("'" 0 1 (fontified nil)) . -120) (120 . 121) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . -113) nil (112 . 114) (#(" " 0 1 (fontified nil)) . -112) (112 . 113) (#("'" 0 1 (fontified nil)) . -112) (112 . 113) nil (111 . 112) nil (#("(" 0 1 (fontified t)) . -111) nil (#(")" 0 1 (fontified t)) . -119) (t 21923 5832 0 0) ((marker . 119) . -1) ((marker . 119) . -1) ((marker* . 119) . 1) ((marker . 120) . -1) ((marker . 120) . -1) nil (423 . 427) nil (#("G" 0 1 (fontified t face font-lock-type-face)) . -423) ((marker . 120) . -1) ((marker . 423) . -1) nil (#("P" 0 1 (fontified t face font-lock-type-face)) . -424) ((marker . 120) . -1) ((marker . 423) . -1) nil (#("h" 0 1 (fontified t face font-lock-type-face)) . -425) ((marker . 120) . -1) ((marker . 423) . -1) nil (#("y" 0 1 (fontified t face font-lock-type-face)) . -426) ((marker . 120) . -1) ((marker . 423) . -1) nil (#("s" 0 1 (fontified t face font-lock-type-face)) . -427) ((marker . 120) . -1) ((marker . 423) . -1) nil (#(":" 0 1 (fontified t)) . -428) ((marker . 120) . -1) ((marker . 423) . -1) nil (#(":" 0 1 (fontified t)) . -429) ((marker . 120) . -1) ((marker . 423) . -1) nil (#("f" 0 1 (fontified t)) . -430) ((marker . 120) . -1) ((marker . 423) . -1) nil (#("i" 0 1 (fontified t)) . -431) ((marker . 120) . -1) ((marker . 423) . -1) nil (#("l" 0 1 (fontified t)) . -432) ((marker . 120) . -1) ((marker . 423) . -1) nil (#("e" 0 1 (fontified t)) . -433) ((marker . 423) . -1) nil (97 . 106) (#("GPh" 0 3 (fontified t face font-lock-type-face)) . -97) ((marker . 120) . -3) nil (#("O" 0 1 (fontified t face font-lock-type-face)) . -100) nil (#("I" 0 1 (fontified t face font-lock-type-face)) . -97) nil (98 . 101) (t 21923 5793 0 0) nil (97 . 99) nil (#("F" 0 1 (fontified t face font-lock-type-face)) . -97) ((marker . 120) . -1) ((marker . 119) . -1) ((marker . 97) . -1) nil (#("i" 0 1 (fontified t face font-lock-type-face)) . -98) ((marker . 120) . -1) ((marker . 119) . -1) ((marker . 97) . -1) nil (#("l" 0 1 (fontified t face font-lock-type-face)) . -99) ((marker . 120) . -1) ((marker . 119) . -1) ((marker . 97) . -1) nil (#("e" 0 1 (fontified t face font-lock-type-face)) . -100) (t 21923 5754 0 0) ((marker . 119) . -1) ((marker . 97) . -1) nil (#(" " 0 1 (fontified t)) . -429) ((marker . 423) . -1) nil (#("\"" 0 1 (fontified t face font-lock-string-face)) . -430) ((marker . 423) . -1) nil (#("f" 0 1 (fontified t face font-lock-string-face)) . -431) nil (#("i" 0 1 (fontified t face font-lock-string-face)) . -432) nil (#("l" 0 1 (fontified t face font-lock-string-face)) . -433) nil (#("e" 0 1 (fontified t face font-lock-string-face)) . -434) nil (#("\"" 0 1 (fontified t face font-lock-string-face)) . -435) nil (425 . 429) nil (#("I" 0 1 (fontified t face font-lock-type-face)) . -425) nil (#("O" 0 1 (fontified t face font-lock-type-face)) . -426) nil (#("." 0 1 (fontified t)) . -427) nil (#("o" 0 1 (fontified t)) . -428) nil (#("p" 0 1 (fontified t)) . -429) nil (#("e" 0 1 (fontified t)) . -430) nil (#("n" 0 1 (fontified t)) . -431) nil (114 . 115) nil (#(")" 0 1 (fontified t)) . -107) ((marker* . 119) . 1) ((marker . 120) . -1) ((marker . 120) . -1) nil (106 . 108) nil (97 . 106) (t 21923 5672 0 0) nil (1049 . 1052) nil (#(" " 0 1 (fontified t)) . -1049) nil (#(" " 0 1 (fontified t)) . -1050) nil (1048 . 1051) (t 21923 5620 0 0) nil (#("
" 0 1 (fontified t)) . -675) ((marker . 119) . -1) nil (#("  DCL.sldiv(\"y\",2,1)           # 画面分割 (描画順(\"y\"oko/\"t\"ate),数:横,数:縦)" 0 2 (fontified t) 2 5 (fontified t face font-lock-type-face) 5 12 (fontified t) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 31 (fontified t) 31 33 (fontified t face font-lock-comment-delimiter-face) 33 44 (fontified t face font-lock-comment-face) 44 45 (fontified t face font-lock-comment-face) 45 51 (fontified t face font-lock-comment-face) 51 52 (fontified t face font-lock-comment-face) 52 66 (fontified t face font-lock-comment-face)) . -676) ((marker* . 119) . 1) ((marker . 120) . -66) ((marker* . 111) . 28) ((marker . 120) . -66) nil (#("
" 0 1 (fontified t face font-lock-comment-face)) . -559) ((marker . 119) . -1) nil (#("  DCL.swpset(\"iwidth\",900)     # 画面の幅
  DCL.swpset(\"iheight\",450)    # 画面の高さ" 0 2 (fontified t) 2 5 (fontified t face font-lock-type-face) 5 13 (fontified t) 13 14 (fontified t face font-lock-string-face) 14 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 31 (fontified t) 31 33 (fontified t face font-lock-comment-delimiter-face) 33 38 (fontified t face font-lock-comment-face) 38 40 (fontified t) 40 43 (fontified t face font-lock-type-face) 43 51 (fontified t) 51 52 (fontified t face font-lock-string-face) 52 59 (fontified t face font-lock-string-face) 59 60 (fontified t face font-lock-string-face) 60 69 (fontified t) 69 71 (fontified t face font-lock-comment-delimiter-face) 71 76 (fontified t face font-lock-comment-face)) . -560) nil (1192 . 1195) nil (#("
  # ----- エネルギースペクトルの図 -----
#  if time == 0
#      GGraph.line eksp.cut(\"t\"=>time),true,\"max\"=>0.25
#  else
#      GGraph.line eksp.cut(\"t\"=>time),true,\"max\"=>0.25,\"min\"=>3.0*10**(-3)
#  end
#  sleep tsleep
  # ----- エンストロフィースペクトルの図 -----
  GGraph.set_fig(\"itr\"=>4)
  if time == 0
      GGraph.line enssp.cut(\"t\"=>time),true,\"max\"=>100
  else
      GGraph.line enssp.cut(\"t\"=>time),true,\"max\"=>100,\"min\"=>10**(-3)
  end
  sleep tsleep
end
" 0 3 (fontified t) 3 5 (fontified t face font-lock-comment-delimiter-face) 5 30 (fontified t face font-lock-comment-face) 30 33 (fontified t face font-lock-comment-delimiter-face) 33 46 (fontified t face font-lock-comment-face) 46 53 (fontified t face font-lock-comment-delimiter-face) 53 75 (fontified t face font-lock-comment-face) 75 76 (fontified t face font-lock-comment-face) 76 91 (fontified t face font-lock-comment-face) 91 94 (fontified t face font-lock-comment-face) 94 102 (fontified t face font-lock-comment-face) 102 105 (fontified t face font-lock-comment-delimiter-face) 105 110 (fontified t face font-lock-comment-face) 110 117 (fontified t face font-lock-comment-delimiter-face) 117 139 (fontified t face font-lock-comment-face) 139 140 (fontified t face font-lock-comment-face) 140 155 (fontified t face font-lock-comment-face) 155 158 (fontified t face font-lock-comment-face) 158 167 (fontified t face font-lock-comment-face) 167 170 (fontified t face font-lock-comment-face) 170 186 (fontified t face font-lock-comment-face) 186 189 (fontified t face font-lock-comment-delimiter-face) 189 193 (fontified t face font-lock-comment-face) 193 196 (fontified t face font-lock-comment-delimiter-face) 196 209 (fontified t face font-lock-comment-face) 209 211 (fontified t) 211 213 (fontified t face font-lock-comment-delimiter-face) 213 241 (fontified t face font-lock-comment-face) 241 243 (fontified t) 243 249 (fontified t face font-lock-type-face) 249 258 (fontified t) 258 259 (fontified t face font-lock-string-face) 259 262 (fontified t face font-lock-string-face) 262 263 (fontified t face font-lock-string-face) 263 268 (fontified t) 268 270 (fontified t) 270 272 (fontified t face font-lock-keyword-face) 272 289 (fontified t) 289 295 (fontified t face font-lock-type-face) 295 311 (fontified t) 311 314 (fontified t face font-lock-string-face) 314 322 (fontified t) 322 326 (fontified t face font-lock-variable-name-face) 326 327 (fontified t) 327 332 (fontified t face font-lock-string-face) 332 338 (fontified t) 338 340 (fontified t) 340 344 (fontified t face font-lock-keyword-face) 344 351 (fontified t) 351 357 (fontified t face font-lock-type-face) 357 373 (fontified t) 373 376 (fontified t face font-lock-string-face) 376 384 (fontified t) 384 388 (fontified t face font-lock-variable-name-face) 388 389 (fontified t) 389 394 (fontified t face font-lock-string-face) 394 400 (fontified t) 400 405 (fontified t face font-lock-string-face) 405 418 (fontified t) 418 421 (fontified t face font-lock-keyword-face) 421 437 (fontified t) 437 440 (fontified t face font-lock-keyword-face) 440 441 (fontified t)) . -1192) nil (423 . 427) nil (#("A" 0 1 (fontified t face font-lock-string-face)) . -423) ((marker . 119) . -1) nil (#("R" 0 1 (fontified t face font-lock-string-face)) . -424) nil (#("G" 0 1 (fontified t face font-lock-string-face)) . -425) nil (#("V" 0 1 (fontified t face font-lock-string-face)) . -426) nil (#("[" 0 1 (fontified t face font-lock-string-face)) . -427) nil (#("0" 0 1 (fontified t face font-lock-string-face)) . -428) nil (#("]" 0 1 (fontified t face font-lock-string-face)) . -429) ((marker* . 119) . 1) ((marker . 120) . -1) ((marker . 120) . -1) nil (430 . 431) (#(" " 0 1 (fontified nil face font-lock-string-face)) . -430) (430 . 431) (#("\"" 0 1 (fontified nil)) . -430) (430 . 431) nil (#("\"" 0 1 (fontified t face font-lock-string-face)) . -423) nil (422 . 424) (#(" " 0 1 (fontified nil)) . -422) (422 . 423) (#("\"" 0 1 (fontified nil)) . -422) (422 . 423) nil (#("," 0 1 (fontified t)) . -422) nil (#(" " 0 1 (fontified t)) . -423) nil (431 . 433) nil (#(" " 0 1 (fontified t)) . -431) nil (430 . 432) nil (429 . 430) nil (428 . 429) nil (#("{" 0 1 (fontified t)) . -428) nil (428 . 429) nil (424 . 428) nil (#("eksp  = GPhys::IO.open 'run3-1.nc', '1deksp'
enssp = GPhys::IO.open 'run3-1.nc', '1denssp'
" 0 8 (fontified t) 8 13 (fontified t face font-lock-type-face) 13 15 (fontified t) 15 17 (fontified t face font-lock-type-face) 17 23 (fontified t) 23 24 (fontified t face font-lock-string-face) 24 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 36 (fontified t) 36 37 (fontified t face font-lock-string-face) 37 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t) 45 53 (fontified t) 53 58 (fontified t face font-lock-type-face) 58 60 (fontified t) 60 62 (fontified t face font-lock-type-face) 62 68 (fontified t) 68 79 (fontified t face font-lock-string-face) 79 81 (fontified t) 81 90 (fontified t face font-lock-string-face) 90 91 (fontified t)) . -430) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . -422) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . -423) nil (#("r" 0 1 (fontified t face font-lock-string-face)) . -423) nil (#("u" 0 1 (fontified t face font-lock-string-face)) . -424) nil (#("n" 0 1 (fontified t face font-lock-string-face)) . -425) nil (#("3" 0 1 (fontified t face font-lock-string-face)) . -426) nil (#("-" 0 1 (fontified t face font-lock-string-face)) . -427) nil (#("1" 0 1 (fontified t face font-lock-string-face)) . -428) nil (#("." 0 1 (fontified t face font-lock-string-face)) . -429) nil (#("n" 0 1 (fontified t face font-lock-string-face)) . -430) nil (#("c" 0 1 (fontified t face font-lock-string-face)) . -431) (t 21923 5442 0 0)))
